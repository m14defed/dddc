package com.sunzh.sun.raw;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple6;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class Dididache extends Contract {
    public static final String[] BINARY_ARRAY = {"608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a12806100606000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063883a56f411610071578063883a56f414610153578063883df3e814610184578063ad932b5c146101a2578063c0a721c5146101be578063e01a74e8146101da578063f04991f0146101f6576100a9565b8063092069c1146100ae57806313318873146100ca578063137cfbe3146100e657806344e82f5214610102578063712ca0f81461011e575b600080fd5b6100c860048036038101906100c39190613124565b610212565b005b6100e460048036038101906100df9190613189565b610435565b005b61010060048036038101906100fb9190613124565b610c64565b005b61011c60048036038101906101179190613189565b610e88565b005b61013860048036038101906101339190613189565b610f96565b60405161014a969594939291906136e3565b60405180910390f35b61016d60048036038101906101689190613261565b6112ac565b60405161017b9291906136b3565b60405180910390f35b61018c611737565b6040516101999190613691565b60405180910390f35b6101bc60048036038101906101b79190613189565b611820565b005b6101d860048036038101906101d391906131ca565b61222b565b005b6101f460048036038101906101ef9190613160565b612798565b005b610210600480360381019061020b9190613160565b612a86565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029890613752565b60405180910390fd5b6102a9612dba565b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600067ffffffffffffffff811180156102ee57600080fd5b5060405190808252806020026020018201604052801561032257816020015b606081526020019060019003908161030d5790505b50815250905080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906103d5929190612df1565b5090505060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b8906137f2565b60405180910390fd5b6104c9612e51565b6006826040516104d99190613663565b90815260200160405180910390206040518060e0016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561058b5780601f106105605761010080835404028352916020019161058b565b820191906000526020600020905b81548152906001019060200180831161056e57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561062d5780601f106106025761010080835404028352916020019161062d565b820191906000526020600020905b81548152906001019060200180831161061057829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106cf5780601f106106a4576101008083540402835291602001916106cf565b820191906000526020600020905b8154815290600101906020018083116106b257829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050905060008160a00151146107e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d890613772565b60405180910390fd5b33816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018160a0018181525050806006836040516108359190613663565b9081526020016040518091039020600082015181600001908051906020019061085f929190612eba565b50602082015181600101908051906020019061087c929190612eba565b506040820151816002019080519060200190610899929190612eba565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060155905050610947612dba565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610ad2578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610abe5780601f10610a9357610100808354040283529160200191610abe565b820191906000526020600020905b815481529060010190602001808311610aa157829003601f168201915b505050505081526020019060010190610a16565b505050508152505090506060816040015190506060600182510167ffffffffffffffff81118015610b0257600080fd5b50604051908082528060200260200182016040528015610b3657816020015b6060815260200190600190039081610b215790505b50905060008090505b8251811015610b8057828181518110610b5457fe5b6020026020010151828281518110610b6857fe5b60200260200101819052508080600101915050610b3f565b508481835181518110610b8f57fe5b602002602001018190525080836040018190525082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610c50929190612df1565b50905050610c5d85610e88565b5050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cea90613752565b60405180910390fd5b610cfb612f3a565b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600067ffffffffffffffff81118015610d4057600080fd5b50604051908082528060200260200182016040528015610d7457816020015b6060815260200190600190039081610d5f5790505b50815250905080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610e27929190612df1565b509050506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60008090505b600580549050811015610f925760058181548110610ea857fe5b90600052602060002001604051602001610ec2919061367a565b6040516020818303038152906040528051906020012082604051602001610ee99190613663565b604051602081830303815290604052805190602001201415610f8557600560016005805490500381548110610f1a57fe5b9060005260206000200160058281548110610f3157fe5b906000526020600020019080546001816001161561010002031660029004610f5a929190612f71565b506005805480610f6657fe5b600190038181906000526020600020016000610f829190612ff8565b90555b8080600101915050610e8e565b5050565b606080600080600080","610fa7612e51565b600688604051610fb79190613663565b90815260200160405180910390206040518060e0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110695780601f1061103e57610100808354040283529160200191611069565b820191906000526020600020905b81548152906001019060200180831161104c57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561110b5780601f106110e05761010080835404028352916020019161110b565b820191906000526020600020905b8154815290600101906020018083116110ee57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111ad5780601f10611182576101008083540402835291602001916111ad565b820191906000526020600020905b81548152906001019060200180831161119057829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050905080602001518160400151826060015183608001518460a001518560c001519650965096509650965096505091939550919395565b6000606060008360ff1614156114f957600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611348576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133f906137f2565b60405180910390fd5b611350612dba565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156114db578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114c75780601f1061149c576101008083540402835291602001916114c7565b820191906000526020600020905b8154815290600101906020018083116114aa57829003601f168201915b50505050508152602001906001019061141f565b50505050815250509050806020015181604001519250925050611732565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157c90613792565b60405180910390fd5b61158d612f3a565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015611718578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117045780601f106116d957610100808354040283529160200191611704565b820191906000526020600020905b8154815290600101906020018083116116e757829003601f168201915b50505050508152602001906001019061165c565b505050508152505090508060200151816040015192509250505b915091565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015611817578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118035780601f106117d857610100808354040283529160200191611803565b820191906000526020600020905b8154815290600101906020018083116117e657829003601f168201915b50505050508152602001906001019061175b565b50505050905090565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166118ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a390613792565b60405180910390fd5b6118b4612e51565b6006826040516118c49190613663565b90815260200160405180910390206040518060e0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119765780601f1061194b57610100808354040283529160200191611976565b820191906000526020600020905b81548152906001019060200180831161195957829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a185780601f106119ed57610100808354040283529160200191611a18565b820191906000526020600020905b8154815290600101906020018083116119fb57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611aba5780601f10611a8f57610100808354040283529160200191611aba565b820191906000526020600020905b815481529060010190602001808311611a9d57829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815260200160068201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816080015173ffffffffffffffffffffffffffffffffffffffff1614611bf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bee906137b2565b60405180910390fd5b60028160a001818152505080600683604051611c139190613663565b90815260200160405180910390206000820151816000019080519060200190611c3d929190612eba565b506020820151816001019080519060200190611c5a929190612eba565b506040820151816002019080519060200190611c77929190612eba565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060155905050611d25612f3a565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015611eb0578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e9c5780601f10611e7157610100808354040283529160200191611e9c565b820191906000526020600020905b815481529060010190602001808311611e7f57829003601f168201915b505050505081526020019060010190611df4565b505050508152505090508160c0015181602001510381602001818152505080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190611f7b929190612df1565b50905050611f87612dba565b60036000846060015173ffffffffffffffffffffffffffff","","aa5780548555612fe7565b82800160010185558215612fe757600052602060002091601f016020900482015b82811115612fe6578254825591600101919060010190612fcb565b5b509050612ff4919061306c565b5090565b50805460018160011615610100020316600290046000825580601f1061301e575061303d565b601f01602090049060005260206000209081019061303c919061306c565b5b50565b61306991905b80821115613065576000818161305c9190612ff8565b50600101613046565b5090565b90565b61308e91905b8082111561308a576000816000905550600101613072565b5090565b90565b6000813590506130a081613997565b92915050565b6000813590506130b5816139ae565b92915050565b600082601f8301126130cc57600080fd5b81356130df6130da8261383f565b613812565b915080825260208301602083018583830111156130fb57600080fd5b613106838284613944565b50505092915050565b60008135905061311e816139c5565b92915050565b6000806040838503121561313757600080fd5b600061314585828601613091565b9250506020613156858286016130a6565b9150509250929050565b60006020828403121561317257600080fd5b6000613180848285016130a6565b91505092915050565b60006020828403121561319b57600080fd5b600082013567ffffffffffffffff8111156131b557600080fd5b6131c1848285016130bb565b91505092915050565b6000806000606084860312156131df57600080fd5b600084013567ffffffffffffffff8111156131f957600080fd5b613205868287016130bb565b935050602084013567ffffffffffffffff81111561322257600080fd5b61322e868287016130bb565b925050604084013567ffffffffffffffff81111561324b57600080fd5b613257868287016130bb565b9150509250925092565b60006020828403121561327357600080fd5b60006132818482850161310f565b91505092915050565b60006132968383613331565b905092915050565b6132a7816138f1565b82525050565b60006132b882613890565b6132c281856138b3565b9350836020820285016132d48561386b565b8060005b8581101561331057848403895281516132f1858261328a565b94506132fc836138a6565b925060208a019950506001810190506132d8565b50829750879550505050505092915050565b61332b81613903565b82525050565b600061333c8261389b565b61334681856138c4565b9350613356818560208601613953565b61335f81613986565b840191505092915050565b60006133758261389b565b61337f81856138d5565b935061338f818560208601613953565b61339881613986565b840191505092915050565b60006133ae8261389b565b6133b881856138e6565b93506133c8818560208601613953565b80840191505092915050565b6000815460018116600081146133f157600181146134165761345a565b607f600283041661340281876138e6565b955060ff198316865280860193505061345a565b6002820461342481876138e6565b955061342f8561387b565b60005b8281101561345157815481890152600182019150602081019050613432565b82880195505050505b505092915050565b600061346f6025836138d5565b91507f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008301527f6374696f6e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006134d56004836138d5565b91507f6e6f2030000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006135156029836138d5565b91507f4f6e6c79207468652050617373656e6765722063616e2063616c6c207468697360008301527f2066756e6374696f6e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061357b6007836138d5565b91507f6e6f207a696a69000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006135bb6010836138d5565b91507f7169616e20746169207368616f206c65000000000000000000000000000000006000830152602082019050919050565b60006135fb6026836138d5565b91507f4f6e6c7920746865204472697665722063616e2063616c6c207468697320667560008301527f6e6374696f6e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b61365d8161392d565b82525050565b600061366f82846133a3565b915081905092915050565b600061368682846133d4565b915081905092915050565b600060208201905081810360008301526136ab81846132ad565b905092915050565b60006040820190506136c86000830185613322565b81810360208301526136da81846132ad565b90509392505050565b600060c08201905081810360008301526136fd818961336a565b90508181036020830152613711818861336a565b9050613720604083018761329e565b61372d606083018661329e565b61373a6080830185613654565b61374760a0830184613654565b979650505050505050565b6000602082019050818103600083015261376b81613462565b9050919050565b6000602082019050818103600083015261378b816134c8565b9050919050565b600060208201905081810360008301526137ab81613508565b9050919050565b600060208201905081810360008301526137cb8161356e565b9050919050565b600060208201905081810360008301526137eb816135ae565b9050919050565b6000602082019050818103600083015261380b816135ee565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561383557600080fd5b8060405250919050565b600067ffffffffffffffff82111561385657600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006138fc8261390d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015613971578082015181840152602081019050613956565b83811115613980576000848401525b50505050565b6000601f19601f8301169050919050565b6139a0816138f1565b81146139ab57600080fd5b50565b6139b781613903565b81146139c257600080fd5b50565b6139ce81613937565b81146139d957600080fd5b5056fea26469706673582212207560f24f4372ff5e2e8468187a6a114ce7e5b76765ac2f5e2ee9d0bfb333d5da64736f6c634300060a0033"};

    public static final String BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a12806100606000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063883a56f411610071578063883a56f414610153578063883df3e814610184578063ad932b5c146101a2578063c0a721c5146101be578063e01a74e8146101da578063f04991f0146101f6576100a9565b8063092069c1146100ae57806313318873146100ca578063137cfbe3146100e657806344e82f5214610102578063712ca0f81461011e575b600080fd5b6100c860048036038101906100c39190613124565b610212565b005b6100e460048036038101906100df9190613189565b610435565b005b61010060048036038101906100fb9190613124565b610c64565b005b61011c60048036038101906101179190613189565b610e88565b005b61013860048036038101906101339190613189565b610f96565b60405161014a969594939291906136e3565b60405180910390f35b61016d60048036038101906101689190613261565b6112ac565b60405161017b9291906136b3565b60405180910390f35b61018c611737565b6040516101999190613691565b60405180910390f35b6101bc60048036038101906101b79190613189565b611820565b005b6101d860048036038101906101d391906131ca565b61222b565b005b6101f460048036038101906101ef9190613160565b612798565b005b610210600480360381019061020b9190613160565b612a86565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029890613752565b60405180910390fd5b6102a9612dba565b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600067ffffffffffffffff811180156102ee57600080fd5b5060405190808252806020026020018201604052801561032257816020015b606081526020019060019003908161030d5790505b50815250905080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906103d5929190612df1565b5090505060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b8906137f2565b60405180910390fd5b6104c9612e51565b6006826040516104d99190613663565b90815260200160405180910390206040518060e0016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561058b5780601f106105605761010080835404028352916020019161058b565b820191906000526020600020905b81548152906001019060200180831161056e57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561062d5780601f106106025761010080835404028352916020019161062d565b820191906000526020600020905b81548152906001019060200180831161061057829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106cf5780601f106106a4576101008083540402835291602001916106cf565b820191906000526020600020905b8154815290600101906020018083116106b257829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050905060008160a00151146107e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d890613772565b60405180910390fd5b33816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018160a0018181525050806006836040516108359190613663565b9081526020016040518091039020600082015181600001908051906020019061085f929190612eba565b50602082015181600101908051906020019061087c929190612eba565b506040820151816002019080519060200190610899929190612eba565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060155905050610947612dba565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610ad2578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610abe5780601f10610a9357610100808354040283529160200191610abe565b820191906000526020600020905b815481529060010190602001808311610aa157829003601f168201915b505050505081526020019060010190610a16565b505050508152505090506060816040015190506060600182510167ffffffffffffffff81118015610b0257600080fd5b50604051908082528060200260200182016040528015610b3657816020015b6060815260200190600190039081610b215790505b50905060008090505b8251811015610b8057828181518110610b5457fe5b6020026020010151828281518110610b6857fe5b60200260200101819052508080600101915050610b3f565b508481835181518110610b8f57fe5b602002602001018190525080836040018190525082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610c50929190612df1565b50905050610c5d85610e88565b5050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cea90613752565b60405180910390fd5b610cfb612f3a565b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600067ffffffffffffffff81118015610d4057600080fd5b50604051908082528060200260200182016040528015610d7457816020015b6060815260200190600190039081610d5f5790505b50815250905080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610e27929190612df1565b509050506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60008090505b600580549050811015610f925760058181548110610ea857fe5b90600052602060002001604051602001610ec2919061367a565b6040516020818303038152906040528051906020012082604051602001610ee99190613663565b604051602081830303815290604052805190602001201415610f8557600560016005805490500381548110610f1a57fe5b9060005260206000200160058281548110610f3157fe5b906000526020600020019080546001816001161561010002031660029004610f5a929190612f71565b506005805480610f6657fe5b600190038181906000526020600020016000610f829190612ff8565b90555b8080600101915050610e8e565b5050565b606080600080600080","610fa7612e51565b600688604051610fb79190613663565b90815260200160405180910390206040518060e0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110695780601f1061103e57610100808354040283529160200191611069565b820191906000526020600020905b81548152906001019060200180831161104c57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561110b5780601f106110e05761010080835404028352916020019161110b565b820191906000526020600020905b8154815290600101906020018083116110ee57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111ad5780601f10611182576101008083540402835291602001916111ad565b820191906000526020600020905b81548152906001019060200180831161119057829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050905080602001518160400151826060015183608001518460a001518560c001519650965096509650965096505091939550919395565b6000606060008360ff1614156114f957600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611348576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133f906137f2565b60405180910390fd5b611350612dba565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156114db578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114c75780601f1061149c576101008083540402835291602001916114c7565b820191906000526020600020905b8154815290600101906020018083116114aa57829003601f168201915b50505050508152602001906001019061141f565b50505050815250509050806020015181604001519250925050611732565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157c90613792565b60405180910390fd5b61158d612f3a565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015611718578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117045780601f106116d957610100808354040283529160200191611704565b820191906000526020600020905b8154815290600101906020018083116116e757829003601f168201915b50505050508152602001906001019061165c565b505050508152505090508060200151816040015192509250505b915091565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015611817578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118035780601f106117d857610100808354040283529160200191611803565b820191906000526020600020905b8154815290600101906020018083116117e657829003601f168201915b50505050508152602001906001019061175b565b50505050905090565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166118ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a390613792565b60405180910390fd5b6118b4612e51565b6006826040516118c49190613663565b90815260200160405180910390206040518060e0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119765780601f1061194b57610100808354040283529160200191611976565b820191906000526020600020905b81548152906001019060200180831161195957829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a185780601f106119ed57610100808354040283529160200191611a18565b820191906000526020600020905b8154815290600101906020018083116119fb57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611aba5780601f10611a8f57610100808354040283529160200191611aba565b820191906000526020600020905b815481529060010190602001808311611a9d57829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815260200160068201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816080015173ffffffffffffffffffffffffffffffffffffffff1614611bf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bee906137b2565b60405180910390fd5b60028160a001818152505080600683604051611c139190613663565b90815260200160405180910390206000820151816000019080519060200190611c3d929190612eba565b506020820151816001019080519060200190611c5a929190612eba565b506040820151816002019080519060200190611c77929190612eba565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060155905050611d25612f3a565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015611eb0578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e9c5780601f10611e7157610100808354040283529160200191611e9c565b820191906000526020600020905b815481529060010190602001808311611e7f57829003601f168201915b505050505081526020019060010190611df4565b505050508152505090508160c0015181602001510381602001818152505080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190611f7b929190612df1565b50905050611f87612dba565b60036000846060015173ffffffffffffffffffffffffffff","","aa5780548555612fe7565b82800160010185558215612fe757600052602060002091601f016020900482015b82811115612fe6578254825591600101919060010190612fcb565b5b509050612ff4919061306c565b5090565b50805460018160011615610100020316600290046000825580601f1061301e575061303d565b601f01602090049060005260206000209081019061303c919061306c565b5b50565b61306991905b80821115613065576000818161305c9190612ff8565b50600101613046565b5090565b90565b61308e91905b8082111561308a576000816000905550600101613072565b5090565b90565b6000813590506130a081613997565b92915050565b6000813590506130b5816139ae565b92915050565b600082601f8301126130cc57600080fd5b81356130df6130da8261383f565b613812565b915080825260208301602083018583830111156130fb57600080fd5b613106838284613944565b50505092915050565b60008135905061311e816139c5565b92915050565b6000806040838503121561313757600080fd5b600061314585828601613091565b9250506020613156858286016130a6565b9150509250929050565b60006020828403121561317257600080fd5b6000613180848285016130a6565b91505092915050565b60006020828403121561319b57600080fd5b600082013567ffffffffffffffff8111156131b557600080fd5b6131c1848285016130bb565b91505092915050565b6000806000606084860312156131df57600080fd5b600084013567ffffffffffffffff8111156131f957600080fd5b613205868287016130bb565b935050602084013567ffffffffffffffff81111561322257600080fd5b61322e868287016130bb565b925050604084013567ffffffffffffffff81111561324b57600080fd5b613257868287016130bb565b9150509250925092565b60006020828403121561327357600080fd5b60006132818482850161310f565b91505092915050565b60006132968383613331565b905092915050565b6132a7816138f1565b82525050565b60006132b882613890565b6132c281856138b3565b9350836020820285016132d48561386b565b8060005b8581101561331057848403895281516132f1858261328a565b94506132fc836138a6565b925060208a019950506001810190506132d8565b50829750879550505050505092915050565b61332b81613903565b82525050565b600061333c8261389b565b61334681856138c4565b9350613356818560208601613953565b61335f81613986565b840191505092915050565b60006133758261389b565b61337f81856138d5565b935061338f818560208601613953565b61339881613986565b840191505092915050565b60006133ae8261389b565b6133b881856138e6565b93506133c8818560208601613953565b80840191505092915050565b6000815460018116600081146133f157600181146134165761345a565b607f600283041661340281876138e6565b955060ff198316865280860193505061345a565b6002820461342481876138e6565b955061342f8561387b565b60005b8281101561345157815481890152600182019150602081019050613432565b82880195505050505b505092915050565b600061346f6025836138d5565b91507f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008301527f6374696f6e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006134d56004836138d5565b91507f6e6f2030000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006135156029836138d5565b91507f4f6e6c79207468652050617373656e6765722063616e2063616c6c207468697360008301527f2066756e6374696f6e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061357b6007836138d5565b91507f6e6f207a696a69000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006135bb6010836138d5565b91507f7169616e20746169207368616f206c65000000000000000000000000000000006000830152602082019050919050565b60006135fb6026836138d5565b91507f4f6e6c7920746865204472697665722063616e2063616c6c207468697320667560008301527f6e6374696f6e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b61365d8161392d565b82525050565b600061366f82846133a3565b915081905092915050565b600061368682846133d4565b915081905092915050565b600060208201905081810360008301526136ab81846132ad565b905092915050565b60006040820190506136c86000830185613322565b81810360208301526136da81846132ad565b90509392505050565b600060c08201905081810360008301526136fd818961336a565b90508181036020830152613711818861336a565b9050613720604083018761329e565b61372d606083018661329e565b61373a6080830185613654565b61374760a0830184613654565b979650505050505050565b6000602082019050818103600083015261376b81613462565b9050919050565b6000602082019050818103600083015261378b816134c8565b9050919050565b600060208201905081810360008301526137ab81613508565b9050919050565b600060208201905081810360008301526137cb8161356e565b9050919050565b600060208201905081810360008301526137eb816135ae565b9050919050565b6000602082019050818103600083015261380b816135ee565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561383557600080fd5b8060405250919050565b600067ffffffffffffffff82111561385657600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006138fc8261390d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015613971578082015181840152602081019050613956565b83811115613980576000848401525b50505050565b6000601f19601f8301169050919050565b6139a0816138f1565b81146139ab57600080fd5b50565b6139b781613903565b81146139c257600080fd5b50565b6139ce81613937565b81146139d957600080fd5b5056fea26469706673582212207560f24f4372ff5e2e8468187a6a114ce7e5b76765ac2f5e2ee9d0bfb333d5da64736f6c634300060a0033"};

    public static final String SM_BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"methodSignatureAsString\":\"()\",\"name\":null,\"type\":\"constructor\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[],\"outputs\":[]},{\"methodSignatureAsString\":\"addDriver(address,int256)\",\"name\":\"addDriver\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"_add\",\"type\":\"address\",\"internalType\":\"address\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"address\"},{\"name\":\"_tokens\",\"type\":\"int256\",\"internalType\":\"int256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"addOrder(string,string,string)\",\"name\":\"addOrder\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"id\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"origin\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"end\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"addPassenger(address,int256)\",\"name\":\"addPassenger\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"_add\",\"type\":\"address\",\"internalType\":\"address\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"address\"},{\"name\":\"_tokens\",\"type\":\"int256\",\"internalType\":\"int256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"complete(string)\",\"name\":\"complete\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"id\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"deposit(int256)\",\"name\":\"deposit\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"money\",\"type\":\"int256\",\"internalType\":\"int256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"getAllId()\",\"name\":\"getAllId\",\"type\":\"function\",\"constant\":true,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"view\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string[]\",\"internalType\":\"string[]\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string[]\"}]},{\"methodSignatureAsString\":\"getOrder(string)\",\"name\":\"getOrder\",\"type\":\"function\",\"constant\":true,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"view\",\"inputs\":[{\"name\":\"id\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"address\"},{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"address\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"}]},{\"methodSignatureAsString\":\"getPeople(uint8)\",\"name\":\"getPeople\",\"type\":\"function\",\"constant\":true,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"view\",\"inputs\":[{\"name\":\"myType\",\"type\":\"uint8\",\"internalType\":\"uint8\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"int256\",\"internalType\":\"int256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\",\"internalType\":\"string[]\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string[]\"}]},{\"methodSignatureAsString\":\"reception(string)\",\"name\":\"reception\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"id\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"recharge(int256)\",\"name\":\"recharge\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"money\",\"type\":\"int256\",\"internalType\":\"int256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"remeve(string)\",\"name\":\"remeve\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"id\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}],\"outputs\":[]}]"};

    public static final String ABI = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_ADDDRIVER = "addDriver";

    public static final String FUNC_ADDORDER = "addOrder";

    public static final String FUNC_ADDPASSENGER = "addPassenger";

    public static final String FUNC_COMPLETE = "complete";

    public static final String FUNC_DEPOSIT = "deposit";

    public static final String FUNC_GETALLID = "getAllId";

    public static final String FUNC_GETORDER = "getOrder";

    public static final String FUNC_GETPEOPLE = "getPeople";

    public static final String FUNC_RECEPTION = "reception";

    public static final String FUNC_RECHARGE = "recharge";

    public static final String FUNC_REMEVE = "remeve";

    protected Dididache(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt addDriver(String _add, BigInteger _tokens) {
        final Function function = new Function(
                FUNC_ADDDRIVER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_add), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(_tokens)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addDriver(String _add, BigInteger _tokens, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDDRIVER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_add), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(_tokens)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddDriver(String _add, BigInteger _tokens) {
        final Function function = new Function(
                FUNC_ADDDRIVER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_add), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(_tokens)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, BigInteger> getAddDriverInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDDRIVER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, BigInteger>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue()
                );
    }

    public TransactionReceipt addOrder(String id, String origin, String end) {
        final Function function = new Function(
                FUNC_ADDORDER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(origin), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(end)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addOrder(String id, String origin, String end, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDORDER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(origin), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(end)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddOrder(String id, String origin, String end) {
        final Function function = new Function(
                FUNC_ADDORDER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(origin), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(end)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getAddOrderInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDORDER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public TransactionReceipt addPassenger(String _add, BigInteger _tokens) {
        final Function function = new Function(
                FUNC_ADDPASSENGER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_add), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(_tokens)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addPassenger(String _add, BigInteger _tokens, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDPASSENGER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_add), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(_tokens)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddPassenger(String _add, BigInteger _tokens) {
        final Function function = new Function(
                FUNC_ADDPASSENGER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_add), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(_tokens)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, BigInteger> getAddPassengerInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDPASSENGER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, BigInteger>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue()
                );
    }

    public TransactionReceipt complete(String id) {
        final Function function = new Function(
                FUNC_COMPLETE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] complete(String id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_COMPLETE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForComplete(String id) {
        final Function function = new Function(
                FUNC_COMPLETE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCompleteInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_COMPLETE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt deposit(BigInteger money) {
        final Function function = new Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(money)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deposit(BigInteger money, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(money)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeposit(BigInteger money) {
        final Function function = new Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(money)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getDepositInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DEPOSIT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List getAllId() throws ContractException {
        final Function function = new Function(FUNC_GETALLID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public Tuple6<String, String, String, String, BigInteger, BigInteger> getOrder(String id) throws ContractException {
        final Function function = new Function(FUNC_GETORDER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple6<String, String, String, String, BigInteger, BigInteger>(
                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (BigInteger) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue());
    }

    public Tuple2<BigInteger, List<String>> getPeople(BigInteger myType) throws ContractException {
        final Function function = new Function(FUNC_GETPEOPLE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint8(myType)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt reception(String id) {
        final Function function = new Function(
                FUNC_RECEPTION, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] reception(String id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_RECEPTION, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForReception(String id) {
        final Function function = new Function(
                FUNC_RECEPTION, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getReceptionInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_RECEPTION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt recharge(BigInteger money) {
        final Function function = new Function(
                FUNC_RECHARGE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(money)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] recharge(BigInteger money, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_RECHARGE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(money)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRecharge(BigInteger money) {
        final Function function = new Function(
                FUNC_RECHARGE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(money)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getRechargeInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_RECHARGE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt remeve(String id) {
        final Function function = new Function(
                FUNC_REMEVE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] remeve(String id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMEVE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemeve(String id) {
        final Function function = new Function(
                FUNC_REMEVE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getRemeveInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMEVE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public static Dididache load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new Dididache(contractAddress, client, credential);
    }

    public static Dididache deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(Dididache.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }
}
