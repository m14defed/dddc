package com.sunzh.sun.raw;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple6;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class Dididache extends Contract {
    public static final String[] BINARY_ARRAY = {"608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506135e7806100606000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063883a56f411610066578063883a56f414610121578063ad932b5c14610152578063c0a721c51461016e578063e01a74e81461018a578063f04991f0146101a657610093565b8063092069c11461009857806313318873146100b4578063137cfbe3146100d0578063712ca0f8146100ec575b600080fd5b6100b260048036038101906100ad9190612dd5565b6101c2565b005b6100ce60048036038101906100c99190612e3a565b6103e5565b005b6100ea60048036038101906100e59190612dd5565b610c0b565b005b61010660048036038101906101019190612e3a565b610e2f565b604051610118969594939291906132cd565b60405180910390f35b61013b60048036038101906101369190612f12565b611145565b60405161014992919061329d565b60405180910390f35b61016c60048036038101906101679190612e3a565b6115d0565b005b61018860048036038101906101839190612e7b565b611f9f565b005b6101a4600480360381019061019f9190612e11565b6124d0565b005b6101c060048036038101906101bb9190612e11565b6127be565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610251576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102489061333c565b60405180910390fd5b610259612af2565b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600067ffffffffffffffff8111801561029e57600080fd5b506040519080825280602002602001820160405280156102d257816020015b60608152602001906001900390816102bd5790505b50815250905080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610385929190612b29565b5090505060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610471576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610468906133dc565b60405180910390fd5b610479612b89565b6005826040516104899190613286565b90815260200160405180910390206040518060e0016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105dd5780601f106105b2576101008083540402835291602001916105dd565b820191906000526020600020905b8154815290600101906020018083116105c057829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561067f5780601f106106545761010080835404028352916020019161067f565b820191906000526020600020905b81548152906001019060200180831161066257829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050905060008160a0015114610791576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107889061335c565b60405180910390fd5b33816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018160a0018181525050806005836040516107e59190613286565b9081526020016040518091039020600082015181600001908051906020019061080f929190612bf2565b50602082015181600101908051906020019061082c929190612bf2565b506040820151816002019080519060200190610849929190612bf2565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c082015181600601559050506108f7612af2565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610a82578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a6e5780601f10610a4357610100808354040283529160200191610a6e565b820191906000526020600020905b815481529060010190602001808311610a5157829003601f168201915b5050505050815260200190600101906109c6565b505050508152505090506060816040015190506060600182510167ffffffffffffffff81118015610ab257600080fd5b50604051908082528060200260200182016040528015610ae657816020015b6060815260200190600190039081610ad15790505b50905060008090505b8251811015610b3057828181518110610b0457fe5b6020026020010151828281518110610b1857fe5b60200260200101819052508080600101915050610aef565b508481835181518110610b3f57fe5b602002602001018190525080836040018190525082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610c00929190612b29565b509050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c919061333c565b60405180910390fd5b610ca2612c72565b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600067ffffffffffffffff81118015610ce757600080fd5b50604051908082528060200260200182016040528015610d1b57816020015b6060815260200190600190039081610d065790505b50815250905080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610dce929190612b29565b509050506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b606080600080600080610e40612b89565b600588604051610e509190613286565b90815260200160405180910390206040518060e0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f025780601f10610ed757610100808354040283529160200191610f02565b820191906000526020600020905b815481529060010190602001808311610ee557829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fa45780601f10610f7957610100808354040283529160200191610fa4565b820191906000526020600020905b815481529060010190602001808311610f8757829003601f","","","3b565b9450612fad8361347b565b925060208a01995050600181019050612f89565b50829750879550505050505092915050565b612fdc816134d8565b82525050565b6000612fed82613470565b612ff78185613499565b9350613007818560208601613528565b6130108161355b565b840191505092915050565b600061302682613470565b61303081856134aa565b9350613040818560208601613528565b6130498161355b565b840191505092915050565b600061305f82613470565b61306981856134bb565b9350613079818560208601613528565b80840191505092915050565b60006130926025836134aa565b91507f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008301527f6374696f6e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006130f86004836134aa565b91507f6e6f2030000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006131386029836134aa565b91507f4f6e6c79207468652050617373656e6765722063616e2063616c6c207468697360008301527f2066756e6374696f6e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061319e6007836134aa565b91507f6e6f207a696a69000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006131de6010836134aa565b91507f7169616e20746169207368616f206c65000000000000000000000000000000006000830152602082019050919050565b600061321e6026836134aa565b91507f4f6e6c7920746865204472697665722063616e2063616c6c207468697320667560008301527f6e6374696f6e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b61328081613502565b82525050565b60006132928284613054565b915081905092915050565b60006040820190506132b26000830185612fd3565b81810360208301526132c48184612f5e565b90509392505050565b600060c08201905081810360008301526132e7818961301b565b905081810360208301526132fb818861301b565b905061330a6040830187612f4f565b6133176060830186612f4f565b6133246080830185613277565b61333160a0830184613277565b979650505050505050565b6000602082019050818103600083015261335581613085565b9050919050565b60006020820190508181036000830152613375816130eb565b9050919050565b600060208201905081810360008301526133958161312b565b9050919050565b600060208201905081810360008301526133b581613191565b9050919050565b600060208201905081810360008301526133d5816131d1565b9050919050565b600060208201905081810360008301526133f581613211565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561341f57600080fd5b8060405250919050565b600067ffffffffffffffff82111561344057600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006134d1826134e2565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b8381101561354657808201518184015260208101905061352b565b83811115613555576000848401525b50505050565b6000601f19601f8301169050919050565b613575816134c6565b811461358057600080fd5b50565b61358c816134d8565b811461359757600080fd5b50565b6135a38161350c565b81146135ae57600080fd5b5056fea2646970667358221220cb4d20c4ec68d4f5d10c1773a55183a97eab05a9ab08739bd5c45dcd950e338d64736f6c634300060a0033"};

    public static final String BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506135e7806100606000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063883a56f411610066578063883a56f414610121578063ad932b5c14610152578063c0a721c51461016e578063e01a74e81461018a578063f04991f0146101a657610093565b8063092069c11461009857806313318873146100b4578063137cfbe3146100d0578063712ca0f8146100ec575b600080fd5b6100b260048036038101906100ad9190612dd5565b6101c2565b005b6100ce60048036038101906100c99190612e3a565b6103e5565b005b6100ea60048036038101906100e59190612dd5565b610c0b565b005b61010660048036038101906101019190612e3a565b610e2f565b604051610118969594939291906132cd565b60405180910390f35b61013b60048036038101906101369190612f12565b611145565b60405161014992919061329d565b60405180910390f35b61016c60048036038101906101679190612e3a565b6115d0565b005b61018860048036038101906101839190612e7b565b611f9f565b005b6101a4600480360381019061019f9190612e11565b6124d0565b005b6101c060048036038101906101bb9190612e11565b6127be565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610251576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102489061333c565b60405180910390fd5b610259612af2565b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600067ffffffffffffffff8111801561029e57600080fd5b506040519080825280602002602001820160405280156102d257816020015b60608152602001906001900390816102bd5790505b50815250905080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610385929190612b29565b5090505060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610471576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610468906133dc565b60405180910390fd5b610479612b89565b6005826040516104899190613286565b90815260200160405180910390206040518060e0016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105dd5780601f106105b2576101008083540402835291602001916105dd565b820191906000526020600020905b8154815290600101906020018083116105c057829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561067f5780601f106106545761010080835404028352916020019161067f565b820191906000526020600020905b81548152906001019060200180831161066257829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050905060008160a0015114610791576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107889061335c565b60405180910390fd5b33816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018160a0018181525050806005836040516107e59190613286565b9081526020016040518091039020600082015181600001908051906020019061080f929190612bf2565b50602082015181600101908051906020019061082c929190612bf2565b506040820151816002019080519060200190610849929190612bf2565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c082015181600601559050506108f7612af2565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610a82578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a6e5780601f10610a4357610100808354040283529160200191610a6e565b820191906000526020600020905b815481529060010190602001808311610a5157829003601f168201915b5050505050815260200190600101906109c6565b505050508152505090506060816040015190506060600182510167ffffffffffffffff81118015610ab257600080fd5b50604051908082528060200260200182016040528015610ae657816020015b6060815260200190600190039081610ad15790505b50905060008090505b8251811015610b3057828181518110610b0457fe5b6020026020010151828281518110610b1857fe5b60200260200101819052508080600101915050610aef565b508481835181518110610b3f57fe5b602002602001018190525080836040018190525082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610c00929190612b29565b509050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c919061333c565b60405180910390fd5b610ca2612c72565b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600067ffffffffffffffff81118015610ce757600080fd5b50604051908082528060200260200182016040528015610d1b57816020015b6060815260200190600190039081610d065790505b50815250905080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610dce929190612b29565b509050506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b606080600080600080610e40612b89565b600588604051610e509190613286565b90815260200160405180910390206040518060e0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f025780601f10610ed757610100808354040283529160200191610f02565b820191906000526020600020905b815481529060010190602001808311610ee557829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fa45780601f10610f7957610100808354040283529160200191610fa4565b820191906000526020600020905b815481529060010190602001808311610f8757829003601f","","","3b565b9450612fad8361347b565b925060208a01995050600181019050612f89565b50829750879550505050505092915050565b612fdc816134d8565b82525050565b6000612fed82613470565b612ff78185613499565b9350613007818560208601613528565b6130108161355b565b840191505092915050565b600061302682613470565b61303081856134aa565b9350613040818560208601613528565b6130498161355b565b840191505092915050565b600061305f82613470565b61306981856134bb565b9350613079818560208601613528565b80840191505092915050565b60006130926025836134aa565b91507f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008301527f6374696f6e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006130f86004836134aa565b91507f6e6f2030000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006131386029836134aa565b91507f4f6e6c79207468652050617373656e6765722063616e2063616c6c207468697360008301527f2066756e6374696f6e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061319e6007836134aa565b91507f6e6f207a696a69000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006131de6010836134aa565b91507f7169616e20746169207368616f206c65000000000000000000000000000000006000830152602082019050919050565b600061321e6026836134aa565b91507f4f6e6c7920746865204472697665722063616e2063616c6c207468697320667560008301527f6e6374696f6e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b61328081613502565b82525050565b60006132928284613054565b915081905092915050565b60006040820190506132b26000830185612fd3565b81810360208301526132c48184612f5e565b90509392505050565b600060c08201905081810360008301526132e7818961301b565b905081810360208301526132fb818861301b565b905061330a6040830187612f4f565b6133176060830186612f4f565b6133246080830185613277565b61333160a0830184613277565b979650505050505050565b6000602082019050818103600083015261335581613085565b9050919050565b60006020820190508181036000830152613375816130eb565b9050919050565b600060208201905081810360008301526133958161312b565b9050919050565b600060208201905081810360008301526133b581613191565b9050919050565b600060208201905081810360008301526133d5816131d1565b9050919050565b600060208201905081810360008301526133f581613211565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561341f57600080fd5b8060405250919050565b600067ffffffffffffffff82111561344057600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006134d1826134e2565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b8381101561354657808201518184015260208101905061352b565b83811115613555576000848401525b50505050565b6000601f19601f8301169050919050565b613575816134c6565b811461358057600080fd5b50565b61358c816134d8565b811461359757600080fd5b50565b6135a38161350c565b81146135ae57600080fd5b5056fea2646970667358221220cb4d20c4ec68d4f5d10c1773a55183a97eab05a9ab08739bd5c45dcd950e338d64736f6c634300060a0033"};

    public static final String SM_BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"methodSignatureAsString\":\"()\",\"name\":null,\"type\":\"constructor\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[],\"outputs\":[]},{\"methodSignatureAsString\":\"addDriver(address,int256)\",\"name\":\"addDriver\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"_add\",\"type\":\"address\",\"internalType\":\"address\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"address\"},{\"name\":\"_tokens\",\"type\":\"int256\",\"internalType\":\"int256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"addOrder(string,string,string)\",\"name\":\"addOrder\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"id\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"origin\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"end\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"addPassenger(address,int256)\",\"name\":\"addPassenger\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"_add\",\"type\":\"address\",\"internalType\":\"address\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"address\"},{\"name\":\"_tokens\",\"type\":\"int256\",\"internalType\":\"int256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"complete(string)\",\"name\":\"complete\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"id\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"deposit(int256)\",\"name\":\"deposit\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"money\",\"type\":\"int256\",\"internalType\":\"int256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"getOrder(string)\",\"name\":\"getOrder\",\"type\":\"function\",\"constant\":true,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"view\",\"inputs\":[{\"name\":\"id\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"},{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"address\"},{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"address\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint256\"}]},{\"methodSignatureAsString\":\"getPeople(uint8)\",\"name\":\"getPeople\",\"type\":\"function\",\"constant\":true,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"view\",\"inputs\":[{\"name\":\"myType\",\"type\":\"uint8\",\"internalType\":\"uint8\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"int256\",\"internalType\":\"int256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\",\"internalType\":\"string[]\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string[]\"}]},{\"methodSignatureAsString\":\"reception(string)\",\"name\":\"reception\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"id\",\"type\":\"string\",\"internalType\":\"string\",\"indexed\":false,\"components\":[],\"dynamic\":true,\"typeAsString\":\"string\"}],\"outputs\":[]},{\"methodSignatureAsString\":\"recharge(int256)\",\"name\":\"recharge\",\"type\":\"function\",\"constant\":false,\"payable\":false,\"anonymous\":false,\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"money\",\"type\":\"int256\",\"internalType\":\"int256\",\"indexed\":false,\"components\":[],\"dynamic\":false,\"typeAsString\":\"int256\"}],\"outputs\":[]}]"};

    public static final String ABI = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_ADDDRIVER = "addDriver";

    public static final String FUNC_ADDORDER = "addOrder";

    public static final String FUNC_ADDPASSENGER = "addPassenger";

    public static final String FUNC_COMPLETE = "complete";

    public static final String FUNC_DEPOSIT = "deposit";

    public static final String FUNC_GETORDER = "getOrder";

    public static final String FUNC_GETPEOPLE = "getPeople";

    public static final String FUNC_RECEPTION = "reception";

    public static final String FUNC_RECHARGE = "recharge";

    protected Dididache(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt addDriver(String _add, BigInteger _tokens) {
        final Function function = new Function(
                FUNC_ADDDRIVER, 
                Arrays.<Type>asList(new Address(_add),
                new Int256(_tokens)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addDriver(String _add, BigInteger _tokens, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDDRIVER, 
                Arrays.<Type>asList(new Address(_add),
                new Int256(_tokens)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddDriver(String _add, BigInteger _tokens) {
        final Function function = new Function(
                FUNC_ADDDRIVER, 
                Arrays.<Type>asList(new Address(_add),
                new Int256(_tokens)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, BigInteger> getAddDriverInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDDRIVER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, BigInteger>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue()
                );
    }

    public TransactionReceipt addOrder(String id, String origin, String end) {
        final Function function = new Function(
                FUNC_ADDORDER, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(origin),
                new Utf8String(end)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addOrder(String id, String origin, String end, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDORDER, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(origin),
                new Utf8String(end)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddOrder(String id, String origin, String end) {
        final Function function = new Function(
                FUNC_ADDORDER, 
                Arrays.<Type>asList(new Utf8String(id),
                new Utf8String(origin),
                new Utf8String(end)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, String> getAddOrderInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDORDER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public TransactionReceipt addPassenger(String _add, BigInteger _tokens) {
        final Function function = new Function(
                FUNC_ADDPASSENGER, 
                Arrays.<Type>asList(new Address(_add),
                new Int256(_tokens)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addPassenger(String _add, BigInteger _tokens, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDPASSENGER, 
                Arrays.<Type>asList(new Address(_add),
                new Int256(_tokens)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddPassenger(String _add, BigInteger _tokens) {
        final Function function = new Function(
                FUNC_ADDPASSENGER, 
                Arrays.<Type>asList(new Address(_add),
                new Int256(_tokens)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, BigInteger> getAddPassengerInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDPASSENGER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, BigInteger>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue()
                );
    }

    public TransactionReceipt complete(String id) {
        final Function function = new Function(
                FUNC_COMPLETE, 
                Arrays.<Type>asList(new Utf8String(id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] complete(String id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_COMPLETE, 
                Arrays.<Type>asList(new Utf8String(id)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForComplete(String id) {
        final Function function = new Function(
                FUNC_COMPLETE, 
                Arrays.<Type>asList(new Utf8String(id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCompleteInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_COMPLETE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt deposit(BigInteger money) {
        final Function function = new Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new Int256(money)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deposit(BigInteger money, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new Int256(money)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeposit(BigInteger money) {
        final Function function = new Function(
                FUNC_DEPOSIT, 
                Arrays.<Type>asList(new Int256(money)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getDepositInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DEPOSIT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple6<String, String, String, String, BigInteger, BigInteger> getOrder(String id) throws ContractException {
        final Function function = new Function(FUNC_GETORDER, 
                Arrays.<Type>asList(new Utf8String(id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple6<String, String, String, String, BigInteger, BigInteger>(
                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (BigInteger) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue());
    }

    public Tuple2<BigInteger, List<String>> getPeople(BigInteger myType) throws ContractException {
        final Function function = new Function(FUNC_GETPEOPLE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint8(myType)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, List<String>>(
                (BigInteger) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()));
    }

    public TransactionReceipt reception(String id) {
        final Function function = new Function(
                FUNC_RECEPTION, 
                Arrays.<Type>asList(new Utf8String(id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] reception(String id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_RECEPTION, 
                Arrays.<Type>asList(new Utf8String(id)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForReception(String id) {
        final Function function = new Function(
                FUNC_RECEPTION, 
                Arrays.<Type>asList(new Utf8String(id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getReceptionInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_RECEPTION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt recharge(BigInteger money) {
        final Function function = new Function(
                FUNC_RECHARGE, 
                Arrays.<Type>asList(new Int256(money)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] recharge(BigInteger money, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_RECHARGE, 
                Arrays.<Type>asList(new Int256(money)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRecharge(BigInteger money) {
        final Function function = new Function(
                FUNC_RECHARGE, 
                Arrays.<Type>asList(new Int256(money)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getRechargeInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_RECHARGE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public static Dididache load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new Dididache(contractAddress, client, credential);
    }

    public static Dididache deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(Dididache.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }
}
